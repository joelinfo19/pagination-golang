// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: query.sql

package tutorial

import (
	"context"
)

const getPeople = `-- name: GetPeople :many
SELECT id, first_name, last_name FROM people WHERE id > ? ORDER BY id LIMIT ?
`

type GetPeopleParams struct {
	ID    int32
	Limit int32
}

func (q *Queries) GetPeople(ctx context.Context, arg GetPeopleParams) ([]Person, error) {
	rows, err := q.db.QueryContext(ctx, getPeople, arg.ID, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Person
	for rows.Next() {
		var i Person
		if err := rows.Scan(&i.ID, &i.FirstName, &i.LastName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
